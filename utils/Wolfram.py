import re

class Wolfram:
    patterns = {r'[\(]α[\(][t][\)][\)]': '[α[t]]',
                r'[\(]β[\(][t][\)][\)]': '[β[t]]',
                r'[\(]γ[\(][t][\)][\)]': '[γ[t]]',
                r'[\(]φ[\(][t][\)][\)]': '[φ[t]]',
                r'[\(]ψ[\(][t][\)][\)]': '[ψ[t]]',
                r'[\(]δ[\(][t][\)][\)]': '[δ[t]]',
                r'[\(]ε[\(][t][\)][\)]': '[ε[t]]',
                r'[\(]τ[\(][t][\)][\)]': '[τ[t]]',
                r'cos': 'Cos',
                r'sin': 'Sin',
                r'Derivative[\(]x[\(]t[\)], [\(]t, 2[\)][\)]': 'x\'\'[t]',
                r'Derivative[\(]y[\(]t[\)], [\(]t, 2[\)][\)]': 'y\'\'[t]',
                r'Derivative[\(]α[\(]t[\)], [\(]t, 2[\)][\)]': 'α\'\'[t]',
                r'Derivative[\(]β[\(]t[\)], [\(]t, 2[\)][\)]': 'β\'\'[t]',
                r'Derivative[\(]γ[\(]t[\)], [\(]t, 2[\)][\)]': 'γ\'\'[t]',
                r'Derivative[\(]φ[\(]t[\)], [\(]t, 2[\)][\)]': 'φ\'\'[t]',
                r'Derivative[\(]ψ[\(]t[\)], [\(]t, 2[\)][\)]': 'ψ\'\'[t]',
                r'Derivative[\(]δ[\(]t[\)], [\(]t, 2[\)][\)]': 'δ\'\'[t]',
                r'Derivative[\(]ε[\(]t[\)], [\(]t, 2[\)][\)]': 'ε\'\'[t]',
                r'Derivative[\(]τ[\(]t[\)], [\(]t, 2[\)][\)]': 'τ\'\'[t]',
                r'Derivative[\(]x[\(]t[\)], t[\)]': 'x\'[t]',
                r'Derivative[\(]y[\(]t[\)], t[\)]': 'y\'[t]',
                r'Derivative[\(]α[\(]t[\)], t[\)]': 'α\'[t]',
                r'Derivative[\(]β[\(]t[\)], t[\)]': 'β\'[t]',
                r'Derivative[\(]γ[\(]t[\)], t[\)]': 'γ\'[t]',
                r'Derivative[\(]φ[\(]t[\)], t[\)]': 'φ\'[t]',
                r'Derivative[\(]ψ[\(]t[\)], t[\)]': 'ψ\'[t]',
                r'Derivative[\(]δ[\(]t[\)], t[\)]': 'δ\'[t]',
                r'Derivative[\(]ε[\(]t[\)], t[\)]': 'ε\'[t]',
                r'Derivative[\(]τ[\(]t[\)], t[\)]': 'τ\'[t]',
                r'Derivative[\(]x[\(]t[\)], t[\)] [*][*] 2': 'x\'[t]^2',
                r'Derivative[\(]y[\(]t[\)], t[\)] [*][*] 2': 'y\'[t]^2',
                r'Derivative[\(]α[\(]t[\)], t[\)] [*][*] 2': 'α\'[t]^2',
                r'Derivative[\(]β[\(]t[\)], t[\)] [*][*] 2': 'β\'[t]^2',
                r'Derivative[\(]γ[\(]t[\)], t[\)] [*][*] 2': 'γ\'[t]^2',
                r'Derivative[\(]φ[\(]t[\)], t[\)] [*][*] 2': 'φ\'[t]^2',
                r'Derivative[\(]ψ[\(]t[\)], t[\)] [*][*] 2': 'ψ\'[t]^2',
                r'Derivative[\(]δ[\(]t[\)], t[\)] [*][*] 2': 'δ\'[t]^2',
                r'Derivative[\(]ε[\(]t[\)], t[\)] [*][*] 2': 'ε\'[t]^2',
                r'Derivative[\(]τ[\(]t[\)], t[\)] [*][*] 2': 'τ\'[t]^2',
                r'[\(]α[\(]t[\)] -': '[α[t] -',
                r'[\(]β[\(]t[\)] -': '[β[t] -',
                r'[\(]γ[\(]t[\)] -': '[γ[t] -',
                r'[\(]φ[\(]t[\)] -': '[φ[t] -',
                r'[\(]ψ[\(]t[\)] -': '[ψ[t] -',
                r'[\(]δ[\(]t[\)] -': '[δ[t] -',
                r'[\(]ε[\(]t[\)] -': '[ε[t] -',
                r'[\(]τ[\(]t[\)] -': '[τ[t] -',
                r'- α[\(]t[\)][\)]': '- α[t]]',
                r'- β[\(]t[\)][\)]': '- β[t]]',
                r'- γ[\(]t[\)][\)]': '- γ[t]]',
                r'- φ[\(]t[\)][\)]': '- φ[t]]',
                r'- ψ[\(]t[\)][\)]': '- ψ[t]]',
                r'- δ[\(]t[\)][\)]': '- δ[t]]',
                r'- ε[\(]t[\)][\)]': '- ε[t]]',
                r'- τ[\(]t[\)][\)]': '- τ[t]]',
                r'[\(]α[\(]t[\)] [+]': '[α[t] +',
                r'[\(]β[\(]t[\)] [+]': '[β[t] +',
                r'[\(]γ[\(]t[\)] [+]': '[γ[t] +',
                r'[\(]φ[\(]t[\)] [+]': '[φ[t] +',
                r'[\(]ψ[\(]t[\)] [+]': '[ψ[t] +',
                r'[\(]δ[\(]t[\)] [+]': '[δ[t] +',
                r'[\(]ε[\(]t[\)] [+]': '[ε[t] +',
                r'[\(]τ[\(]t[\)] [+]': '[τ[t] +',
                r'[+] α[\(]t[\)][\)]': '+ α[t]]',
                r'[+] β[\(]t[\)][\)]': '+ β[t]]',
                r'[+] γ[\(]t[\)][\)]': '+ γ[t]]',
                r'[+] φ[\(]t[\)][\)]': '+ φ[t]]',
                r'[+] ψ[\(]t[\)][\)]': '+ ψ[t]]',
                r'[+] δ[\(]t[\)][\)]': '+ δ[t]]',
                r'[+] ε[\(]t[\)][\)]': '+ ε[t]]',
                r'[+] τ[\(]t[\)][\)]': '+ τ[t]]',
                r'pi[/]4[\)]': 'Pi/4]',
                r'R[*][*]2': 'R^2',
                r'[]][]][*][*]2': ']]^2',
                r'[*][*]2': '^2',
                r'sqrt[\(]2[\)]': 'Sqrt[2]',
                r'λ_1': 'λ1[t]',
                r'λ_2': 'λ2[t]',
                r'λ_3': 'λ3[t]',
                r'λ_4': 'λ4[t]',
                r'λ_5': 'λ5[t]',
                r'[\(]2[*]β[\(]t[\)]': '[2*β[t]',
                r'[*]γ[\(]t[\)][\)]': '*γ[t]]',
                r'[\(]2[*]γ[\(]t[\)][\)]': '[2*γ[t]]',
                r'1[.]0[*]': '',
                r'[\(]2[*]τ[\(]t[\)][\)]': '[2*τ[t]]',
                r'C_Mx': 'Cmx',
                r'C_My': 'Cmy',
                r'C_Mz': 'CMz',
                r'C_mz': 'Cmz',
                r'M_p': 'Mp',
                r'l_p': 'lp',
                r'l_w': 'lw',
                r'J_wx': 'Jwx',
                r'J_wy': 'Jwy',
                r'J_wz': 'Jwz',
                r'J_px': 'Jpx',
                r'J_py': 'Jpy',
                r'J_pz': 'Jpz',
                r'α[\(][t][\)]': 'α[t]',
                r'β[\(][t][\)]': 'β[t]',
                r'γ[\(][t][\)]': 'γ[t]',
                r'φ[\(][t][\)]': 'φ[t]',
                r'ψ[\(][t][\)]': 'ψ[t]',
                r'δ[\(][t][\)]': 'δ[t]',
                r'ε[\(][t][\)]': 'ε[t]',
                r'τ[\(][t][\)]': 'τ[t]',
               }

    def __init__(self):
        pass

    def transformForWolframMathematica(self, coefficient):
        for key in self.patterns.keys():
            transformed = re.sub(re.compile(key), self.patterns[key], coefficient)
            coefficient = transformed

        return coefficient